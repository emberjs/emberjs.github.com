<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ember Blog</title>
  <subtitle>Ember News and Updates</subtitle>
  <id>http://emberjs.com/blog</id>
  <link href="http://emberjs.com/blog"/>
  <link href="http://emberjs.com/blog/feed.xml" rel="self"/>
  <updated>2017-03-19T00:00:00+00:00</updated>
  <author>
    <name>Ember</name>
  </author>
  <entry>
    <title>Ember 2.12 and 2.13 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2017/03/19/ember-2-12-released.html"/>
    <id>http://emberjs.com/blog/2017/03/19/ember-2-12-released.html</id>
    <published>2017-03-19T00:00:00+00:00</published>
    <updated>2017-03-19T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Today the Ember project is releasing version 2.12.0 of Ember.js, Ember Data, and Ember CLI.&lt;/p&gt;

&lt;p&gt;This release kicks off the 2.13 beta cycle for all sub-projects. We encourage our
community (especially addon authors) to help test these beta builds and report...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today the Ember project is releasing version 2.12.0 of Ember.js, Ember Data, and Ember CLI.&lt;/p&gt;

&lt;p&gt;This release kicks off the 2.13 beta cycle for all sub-projects. We encourage our
community (especially addon authors) to help test these beta builds and report
any bugs before they are published as a final release in six weeks&amp;#39; time. The
&lt;a href="https://github.com/ember-cli/ember-try"&gt;ember-try&lt;/a&gt; addon is a great way to
continuously test your projects against the latest Ember releases.&lt;/p&gt;

&lt;p&gt;You can read more about our general release process here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/builds/"&gt;Release Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/09/06/new-ember-release-process.html"&gt;The Ember Release Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2015/06/16/ember-project-at-2-0.html"&gt;The Ember Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;Ember LTS Releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js'&gt;Ember.js&lt;/h2&gt;
&lt;p&gt;Ember.js is the core framework for building ambitious web applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-js-2-12'&gt;Changes in Ember.js 2.12&lt;/h3&gt;
&lt;p&gt;The
2.12.0 release is an Ember.js Long-Term Support candidate. In six weeks, the 2.12.x series
will become the latest LTS release and six weeks after that the 2.8 LTS branch
will no longer receive bugfix patches.&lt;/p&gt;

&lt;p&gt;For more information about Ember&amp;#39;s LTS policies, see the
&lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;announcement blog
post&lt;/a&gt; and
&lt;a href="http://emberjs.com/builds/"&gt;builds page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ember 2.12 implements the &lt;code&gt;factoryFor&lt;/code&gt; API as described in &lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0150-factory-for.md"&gt;RFC #150&lt;/a&gt;.
This public API replaces the intimate API of &lt;code&gt;_lookupFactory&lt;/code&gt;, and additionally
discourages developers from setting properties on classes returned from the
container. For more information about this API see the &lt;a href="http://emberjs.com/api/classes/ContainerProxyMixin.html#method_factoryFor"&gt;API
docs&lt;/a&gt;
and &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_migrating-from-_lookupfactory-to-factoryfor"&gt;&lt;code&gt;_lookupFactory&lt;/code&gt; deprecation guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Addon authors and others should consider if the
&lt;a href="https://github.com/rwjblue/ember-factory-for-polyfill"&gt;ember-factory-for-polyfill&lt;/a&gt;
addon can help them avoid the deprecation warning for &lt;code&gt;_lookupFactory&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, this release of Ember contains an incremental performance
improvement for the Glimmer rendering engine (you may have seen it
referred to as the &amp;quot;binary VM&amp;quot;). By avoiding runtime
compilation of syntax objects, initial rendering performance will benefit.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_deprecations-in-ember-2-12'&gt;Deprecations in Ember 2.12&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;Ember.K&lt;/code&gt; utility function is deprecated per &lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0178-deprecate-ember-k.md"&gt;RFC #178&lt;/a&gt;.
See the &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_code-ember-k-code"&gt;deprecation guide&lt;/a&gt;
and pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14751"&gt;#14751&lt;/a&gt;
for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arguments to the component lifecycle hooks of &lt;code&gt;didInitAttrs&lt;/code&gt;, &lt;code&gt;didReceiveAttrs&lt;/code&gt;, and &lt;code&gt;didUpdateAttrs&lt;/code&gt;
are deprecated. These arguments were private and undocumented. Please see
&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0191-deprecate-component-lifecycle-hook-args.md"&gt;RFC #191&lt;/a&gt;
for further context and discussion.
Please note that
this only deprecates the usage of the arguments passed to this hook, not the
hooks themselves. See pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14711"&gt;#14711&lt;/a&gt;
for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember.js 2.12, please review the
&lt;a href="https://github.com/emberjs/ember.js/releases/tag/v2.12.0"&gt;Ember.js 2.12.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-js-2-13'&gt;Upcoming Changes in Ember.js 2.13&lt;/h3&gt;
&lt;p&gt;Building on the addition of &lt;code&gt;factoryFor&lt;/code&gt; in Ember 2.12, Ember 2.13 will change
the way dependency injection is implemented in the framework. Until 2.12,
dependencies were injected onto an instance using &lt;code&gt;extend&lt;/code&gt; to create a subclass.
This created an excessive number of subclasses during the execution of an
application. In Ember 2.13 injections will be passed to an object via &lt;code&gt;create&lt;/code&gt;
during instantiation. This results in a notable performance improvement
that grows in impact with the complexity of an application.&lt;/p&gt;

&lt;p&gt;See &lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0150-factory-for.md"&gt;RFC #150&lt;/a&gt;
and pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14360"&gt;#14360&lt;/a&gt; for
more details about this change.&lt;/p&gt;

&lt;p&gt;Additionally, this release contains a further refinement on the &amp;quot;binary VM&amp;quot;
change landed in 2.12. By using integers for common Glimmer wire-format strings,
compiled template sizes in 2.13 will see an incremental size reduction.&lt;/p&gt;

&lt;p&gt;In addition to these and other improvements, several changes arising
from the &lt;a href="https://github.com/emberjs/rfcs"&gt;RFC&lt;/a&gt; process have been implemented:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/rfcs/issues/146"&gt;RFC issue #146&lt;/a&gt; advocated for the
addition of &lt;code&gt;resumeTest&lt;/code&gt; as a compliment to &lt;code&gt;pauseTest&lt;/code&gt;. This was implemented
in &lt;a href="https://github.com/emberjs/ember.js/pull/13663"&gt;#13663&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0186-track-unique-history-location-state.md"&gt;RFC #186&lt;/a&gt;
describes the addition of &lt;code&gt;uuid&lt;/code&gt; as a property on &lt;code&gt;HistoryLocation&lt;/code&gt; adapters
for the router. This addition makes it possible to track scroll locations
to a point in browsing history. See pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14011"&gt;#14011&lt;/a&gt;
for more details.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the upcoming changes in Ember.js 2.13, please review the
&lt;a href="https://github.com/emberjs/ember.js/releases/tag/v2.13.0-beta.1"&gt;Ember.js 2.13.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-data'&gt;Ember Data&lt;/h2&gt;
&lt;p&gt;Ember Data is the official data persistence library for Ember.js applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-data-2-12'&gt;Changes in Ember Data 2.12&lt;/h3&gt;
&lt;p&gt;Ember Data 2.12 represents the work of 19 direct contributors
and over 90 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.12 continues to reflect our focus on performance improvements, and
we are happy to report this is the fastest release of Ember Data yet.&lt;/p&gt;

&lt;p&gt;A new &lt;code&gt;serializeId()&lt;/code&gt; method has been added to &lt;code&gt;JSONSerializer&lt;/code&gt;,
&lt;code&gt;RESTSerializer&lt;/code&gt; and &lt;code&gt;JSONAPISerializer&lt;/code&gt;. This is useful if you are
working with a backend that requires your ids to be something other
than a string. For example:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td colspan="2"&gt;app/serializers/application.js&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; DS from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-data&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="reserved"&gt;export&lt;/span&gt; &lt;span class="keyword"&gt;default&lt;/span&gt; DS.JSONSerializer.extend({
  serializeId(snapshot, json, primaryKey) {
    &lt;span class="keyword"&gt;var&lt;/span&gt; id = snapshot.id;
    json[primaryKey] = parseInt(id, &lt;span class="integer"&gt;10&lt;/span&gt;);
   }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For more information see the &lt;a href="http://emberjs.com/api/data/classes/DS.JSONSerializer.html#method_serializeId"&gt;&lt;code&gt;serializeId&lt;/code&gt; API
docs&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_deprecations-in-ember-data-2-12'&gt;Deprecations in Ember Data 2.12&lt;/h4&gt;
&lt;p&gt;Ember Data 2.12 contains no new deprecations.&lt;/p&gt;

&lt;p&gt;For more details on the changes in Ember Data 2.12, please review the
&lt;a href="https://github.com/emberjs/data/releases/tag/v2.12.0"&gt;Ember Data 2.12.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-data-2-13'&gt;Upcoming changes in Ember Data 2.13&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ds-extended-errors&lt;/code&gt; (&lt;a href="https://github.com/emberjs/data/pull/3586"&gt;#3586&lt;/a&gt; &lt;a href="https://github.com/emberjs/data/pull/4287"&gt;#4287&lt;/a&gt;) feature has been enabled on the beta branch for Ember Data 2.13.&lt;/p&gt;

&lt;p&gt;This feature introduces an &lt;code&gt;extend&lt;/code&gt; method on errors which allows
users to create their own custom errors that extend from
&lt;code&gt;DS.AdapterError&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;const MyCustomError = DS.AdapterError.extend({ &lt;span class="key"&gt;message&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;My custom error.&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; });
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The feature also introduces some new errors to rest adapter which will
be used to reject the adapter promises based on http status of the API
response.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[401] &lt;code&gt;DS.UnauthorizedError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[403] &lt;code&gt;DS.ForbiddenError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[404] &lt;code&gt;DS.NotFoundError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[409] &lt;code&gt;DS.ConflictError&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[500] &lt;code&gt;DS.ServerError&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to &lt;a href="https://github.com/tchak"&gt;tchak&lt;/a&gt; and
&lt;a href="https://github.com/tchak"&gt;twokul&lt;/a&gt; for their work on this feature and
&lt;a href="https://github.com/lindyhopchris"&gt;lindyhopchris&lt;/a&gt; for his help
documenting the feature.&lt;/p&gt;

&lt;p&gt;For more details on the upcoming changes in Ember Data 2.13, please review the
&lt;a href="https://github.com/emberjs/data/releases/tag/v2.13.0-beta.1"&gt;Ember Data 2.13.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-cli'&gt;Ember CLI&lt;/h2&gt;
&lt;p&gt;Ember CLI is the command line interface for managing and packaging Ember.js
applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upgrading-ember-cli'&gt;Upgrading Ember CLI&lt;/h3&gt;
&lt;p&gt;You may upgrade Ember CLI separately from Ember.js and Ember Data! To upgrade
your projects using &lt;code&gt;yarn&lt;/code&gt; run:&lt;/p&gt;
&lt;div class="highlight text "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;yarn upgrade ember-cli
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To upgrade your projects using &lt;code&gt;npm&lt;/code&gt; run:&lt;/p&gt;
&lt;div class="highlight text "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;npm install --save-dev ember-cli
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After running the
upgrade command run &lt;code&gt;ember init&lt;/code&gt; inside of the project directory to apply the
blueprint changes. You can preview those changes for &lt;a href="https://github.com/ember-cli/ember-new-output/compare/v2.11.0...v2.12.0"&gt;applications&lt;/a&gt;
and &lt;a href="https://github.com/ember-cli/ember-addon-output/compare/v2.11.0...v2.12.0"&gt;addons&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-cli-2-12'&gt;Changes in Ember CLI 2.12&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_switch-to-eslint'&gt;Switch to ESLint&lt;/h4&gt;
&lt;p&gt;Ember CLI will now generate new projects with an ESLint setup. This changes the default linting system from JSHint (which has been used
since we initially added linting support to Ember CLI) to ESLint. The new project setup uses a fairly simple &lt;code&gt;.eslinrc.js&lt;/code&gt; relying
largely on ESLint&amp;#39;s own &lt;code&gt;recommended&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Using JSHint in projects and addons generated by prior versions of Ember CLI is still supported, but we recommend that you update to
ESLint as you upgrade your project and addons to newer Ember CLI versions.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_reduced-dependencies'&gt;Reduced Dependencies&lt;/h4&gt;
&lt;p&gt;In order to avoid inconsistencies and issues due to supporting many &lt;code&gt;npm&lt;/code&gt; client versions, Ember CLI has had &lt;code&gt;npm&lt;/code&gt; as a dependency
for quite some time. This is used for both &lt;code&gt;ember new foo&lt;/code&gt; (to initially install dependencies for a newly generated application) and
to install packages via &lt;code&gt;ember install ember-cli-template-lint&lt;/code&gt; (to install the addon specified). Having &lt;code&gt;npm&lt;/code&gt; as a dependency
introduces roughly 19MB to a freshly generated application&amp;#39;s &lt;code&gt;node_modules&lt;/code&gt; size. As the &lt;code&gt;npm&lt;/code&gt; client has become more stable (3.x series and
newer) this has seemed more and more wasteful.&lt;/p&gt;

&lt;p&gt;Starting with Ember CLI 2.12, &lt;code&gt;npm&lt;/code&gt; is no longer a dependency. If a suitable version of &lt;code&gt;npm&lt;/code&gt; is present on the system,
it will be used. If &lt;code&gt;npm&lt;/code&gt; is not found, or a version older than &lt;code&gt;3.0.0&lt;/code&gt; is found, Ember CLI will emit an error when you run commands that would utilize
&lt;code&gt;npm&lt;/code&gt; (e.g. &lt;code&gt;ember install&lt;/code&gt;, &lt;code&gt;ember new&lt;/code&gt;, &lt;code&gt;ember addon&lt;/code&gt;, &lt;code&gt;ember init&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Similarly, Ember CLI had a dependency on &lt;code&gt;bower&lt;/code&gt; in order to support the &lt;code&gt;bower install&lt;/code&gt; phase while generating new projects and installing
addons.
As of Ember CLI 2.11 a new application has no dependencies via &lt;code&gt;bower.json&lt;/code&gt;. This means the dependency on &lt;code&gt;bower&lt;/code&gt; itself is also potential bloat.
Having &lt;code&gt;bower&lt;/code&gt;
as a dependency added roughly 21MB to a new application&amp;#39;s total &lt;code&gt;node_modules&lt;/code&gt; size. In Ember CLI 2.12, bower is only added as a dependency if a command
requires &lt;code&gt;bower&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Combined, these changes result in a &lt;code&gt;node_modules&lt;/code&gt; size reduction of approximately 40MB for newly generated applications.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-notable-changes'&gt;Other Notable Changes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ember-data&lt;/code&gt; has been removed from the addon blueprint.&lt;/li&gt;
&lt;li&gt;Properly call &lt;code&gt;preprocessTree&lt;/code&gt; / &lt;code&gt;postprocessTree&lt;/code&gt; for addons.&lt;/li&gt;
&lt;li&gt;Split serving assets into separate internal addons. This enables work to push ember-cli-fastboot towards 1.0.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember CLI 2.12 and detailed upgrade
instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v2.12.0"&gt;Ember CLI 2.12.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-cli-2-13'&gt;Upcoming Changes in Ember CLI 2.13&lt;/h3&gt;&lt;h4 class='anchorable-toc' id='toc_add-support-for-using-code-yarn-code'&gt;Add support for using &lt;code&gt;yarn&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Ember CLI projects have been able to utilize &lt;code&gt;yarn&lt;/code&gt; for dependency management for quite some time, however it was not well supported by
the default generators. In 2.13 Ember CLI is now &amp;quot;yarn aware&amp;quot;, and will use &lt;code&gt;yarn&lt;/code&gt; for tasks such as &lt;code&gt;ember install&lt;/code&gt; if it detects that
&lt;code&gt;yarn&lt;/code&gt; is installed and a &lt;code&gt;yarn.lock&lt;/code&gt; exists in the project. You can even instruct &lt;code&gt;ember new&lt;/code&gt; to generate a new project with a &lt;code&gt;yarn.lock&lt;/code&gt;
for you via &lt;code&gt;ember new foo --yarn&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_enable-instrumentation-hooks'&gt;Enable Instrumentation Hooks&lt;/h4&gt;
&lt;p&gt;Ember CLI has had the ability to generate custom instrumentation output for builds for a few years now (introduced on 2015-08-24), but
this information has not been readily accessible. In 2.13 ember-cli exposes this information to addons that implement the &lt;code&gt;instrumentation&lt;/code&gt;
hook. This allows addons to access many things that were previously very difficult (e.g. reliable build time reporting).&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href="https://github.com/hjdivad"&gt;@hjdivad&lt;/a&gt; for proposing and implementing this feature. Please read through &lt;a href="https://github.com/ember-cli/rfcs/blob/master/complete/0091-addon-instrumentation-experimental-hooks.md"&gt;the RFC&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_targets'&gt;Targets&lt;/h4&gt;
&lt;p&gt;In order to allow addons to understand the desired target platforms of the app that they are operating in, a new file has been added
to all generated projects: &lt;code&gt;config/targets.js&lt;/code&gt;. This file exposes the supported targets so that tooling such as &lt;a href="https://github.com/postcss/autoprefixer"&gt;autoprefixer&lt;/a&gt; 
and &lt;a href="https://github.com/babel/babel-preset-env"&gt;babel-preset-env&lt;/a&gt; can properly understand the level of transpilation that is needed.&lt;/p&gt;

&lt;p&gt;The default &lt;code&gt;config/targets.js&lt;/code&gt; looks like:&lt;/p&gt;
&lt;div class="highlight js "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;module.exports = {
  &lt;span class="key"&gt;browsers&lt;/span&gt;: [
    &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ie 9&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;last 1 Chrome versions&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;last 1 Firefox versions&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;last 1 Safari versions&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;
  ]
};
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The target information is exposed to addons via &lt;code&gt;this.project.targets&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href="https://github.com/cibernox"&gt;@cibernox&lt;/a&gt; for proposing and implementing this feature. Please read through &lt;a href="https://github.com/ember-cli/rfcs/blob/master/complete/0095-standardise-targets.md"&gt;the RFC&lt;/a&gt;
for more insight.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_babel-6'&gt;Babel 6&lt;/h4&gt;
&lt;p&gt;Babel 6 was introduced on stage during EmberCamp London way back on 2015-10-29. However, Ember CLI and its ecosystem
have continued to use the aging and nearly unsupported Babel 5. Babel 6 was a massive shift for Babel and the migration posed quite a
challenge for ember-cli.&lt;/p&gt;

&lt;p&gt;After much work, Babel 6 support has been added to Ember CLI internally and for newly generated projects (both applications and addons).
The latest beta of &lt;code&gt;ember-cli-babel@6&lt;/code&gt; takes advantage of the new &lt;code&gt;project.targets&lt;/code&gt; API along with &lt;a href="https://github.com/babel/babel-preset-env"&gt;&lt;code&gt;babel-preset-env&lt;/code&gt;&lt;/a&gt;
to allow applications to have significantly better control of exactly what is transpiled. &lt;code&gt;babel-preset-env&lt;/code&gt; utilizes the &lt;a href="http://caniuse.com/"&gt;caniuse&lt;/a&gt; and
&lt;a href="https://github.com/kangax"&gt;@kangax&lt;/a&gt;&amp;#39;s &lt;a href="https://kangax.github.io/compat-table/es6/"&gt;ES6 compatibility database&lt;/a&gt; to know which features are available natively and which
require transpilation. For example, with the proper targets configuration &lt;code&gt;ember-cli-babel&lt;/code&gt; will no longer transpile &lt;code&gt;const&lt;/code&gt; / &lt;code&gt;let&lt;/code&gt;, 
&lt;code&gt;() =&amp;gt; { }&lt;/code&gt; functions, &lt;code&gt;class&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;The work done in &lt;code&gt;ember-cli-babel&lt;/code&gt; allows both &lt;code&gt;ember-cli-babel@5&lt;/code&gt; and &lt;code&gt;ember-cli-babel@6&lt;/code&gt; to coexist peacefully, so it is safe for addon authors
to begin updating their internal &lt;code&gt;ember-cli-babel&lt;/code&gt; dependency so that applications can take advantage of more of these &lt;code&gt;babel@6&lt;/code&gt; features.&lt;/p&gt;

&lt;p&gt;Please test your applications and addons with &lt;code&gt;ember-cli-babel@6&lt;/code&gt; and report any issues you encounter. Due to the large number of changes required 
internally, we would like a larger than normal beta testing base to ensure things are as stable as possible before 2.13.0 is released.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-notable-changes'&gt;Other Notable Changes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bower.json&lt;/code&gt; is no longer included in a newly generated project.&lt;/li&gt;
&lt;li&gt;Fix command interruption issues on windows.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;filesToRemove&lt;/code&gt; property for custom blueprints.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember CLI 2.13.0-beta.1 and detailed upgrade
instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v2.13.0-beta.1"&gt;Ember CLI 2.13.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_thank-you'&gt;Thank You!&lt;/h2&gt;
&lt;p&gt;As a community-driven open-source project with an ambitious scope, each of
these releases serve as a reminder that the Ember project would not have been
possible without your continued support. We are extremely grateful to our
contributors for their efforts.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>2017 Ember Community Survey</title>
    <link rel="alternate" href="http://emberjs.com/blog/2017/02/28/2017-ember-community-survey.html"/>
    <id>http://emberjs.com/blog/2017/02/28/2017-ember-community-survey.html</id>
    <published>2017-02-28T00:00:00+00:00</published>
    <updated>2017-02-28T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;The past year has been a great time to work with the web, and an exciting one to
be building applications with Ember.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ember.js completed eight backward-compatible minor version releases in the
last year, &lt;a href="http://emberjs.com/blog/tags/releases.html"&gt;2.4 through 2.11&lt;/a&gt;.
Included were the framework...&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;The past year has been a great time to work with the web, and an exciting one to
be building applications with Ember.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ember.js completed eight backward-compatible minor version releases in the
last year, &lt;a href="http://emberjs.com/blog/tags/releases.html"&gt;2.4 through 2.11&lt;/a&gt;.
Included were the framework&amp;#39;s first two Long-Term Support (LTS) releases.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2016/07/29/announcing-the-glimmer-2-alpha.html"&gt;Glimmer 2&lt;/a&gt;,
a major rewrite of Ember&amp;#39;s rendering system, landed in Ember.js 2.10.&lt;/li&gt;
&lt;li&gt;Framework support for &lt;a href="http://ember-engines.com/"&gt;Ember Engines&lt;/a&gt; landed in
in Ember.js 2.8.&lt;/li&gt;
&lt;li&gt;Support for &lt;a href="https://ember-fastboot.com/"&gt;Ember FastBoot&lt;/a&gt; stabilized in
Ember.js 2.4.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://www.emberaddons.com/"&gt;Ember.js addon community&lt;/a&gt; grew from 2,000
to over 3,500 publicly available addons!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With 2017 already under way, we would like your help to learn
about who is in the Ember community and how they work with the framework.
To that end, we&amp;#39;re pleased to announce the official 2017 Ember Community Survey.&lt;/p&gt;

&lt;p&gt;&lt;a href="/ember-community-survey-2017" class="survey-button orange button"&gt;
  Survey Landing Page &lt;img src="/images/survey/right-arrow.png" alt="Arrow to the right" /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is our third year learning about the community&amp;#39;s makeup and interests,
and we&amp;#39;re looking forward to
sharing the results at &lt;a href="http://emberconf.com/"&gt;EmberConf 2017&lt;/a&gt; on March 28th.
The number of survey participants grew from 900 in
2015 (&lt;a href="http://www.201-created.com/ember-community-survey-2015"&gt;2015 survey results&lt;/a&gt;)
to over 1,800 in 2016 (&lt;a href="http://emberjs.com/ember-community-survey-2016"&gt;2016 survey results&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Completing the survey should take about fifteen minutes. Submissions will be
accepted until March 21st.&lt;/p&gt;

&lt;p&gt;Please help us spread the word by sharing the
&lt;a href="/ember-community-survey-2017"&gt;survey landing page&lt;/a&gt; on your social
network feeds, at meetups and around your office and other communities.&lt;/p&gt;

&lt;p&gt;We look forward to your participation!
If you have any immediate questions, feel free to email
Tom (&lt;a href="https://twitter.com/tzellman"&gt;@tzellman&lt;/a&gt;) and
the survey team via
&lt;a href="mailto:survey@201-created.com"&gt;survey@201-created.com&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember 2.11 and 2.12 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2017/01/23/ember-2-11-released.html"/>
    <id>http://emberjs.com/blog/2017/01/23/ember-2-11-released.html</id>
    <published>2017-01-23T00:00:00+00:00</published>
    <updated>2017-01-23T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Today, the Ember project is releasing Ember.js, Ember Data and Ember CLI
version 2.11.0.&lt;/p&gt;

&lt;p&gt;This also kicks off the 2.12 beta cycle for all sub-projects. We encourage our
community (especially addon authors) to help test these beta builds and report...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today, the Ember project is releasing Ember.js, Ember Data and Ember CLI
version 2.11.0.&lt;/p&gt;

&lt;p&gt;This also kicks off the 2.12 beta cycle for all sub-projects. We encourage our
community (especially addon authors) to help test these beta builds and report
any bugs before they are published as a final release in six weeks&amp;#39; time. The
&lt;a href="https://github.com/ember-cli/ember-try"&gt;ember-try&lt;/a&gt; addon is a great way to
continuously test your projects against the latest Ember releases.&lt;/p&gt;

&lt;p&gt;You can read more about our general release process here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/builds/"&gt;Release Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/09/06/new-ember-release-process.html"&gt;The Ember Release Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2015/06/16/ember-project-at-2-0.html"&gt;The Ember Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;Ember LTS Releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js'&gt;Ember.js&lt;/h2&gt;
&lt;p&gt;Ember.js is the core framework for building ambitious web applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-js-2-11'&gt;Changes in Ember.js 2.11&lt;/h3&gt;
&lt;p&gt;Ember.js 2.11 continues to build on the foundation of Glimmer 2, incorporating
many bug fixes to improve compatibility and stability since 2.10.&lt;/p&gt;

&lt;p&gt;Among other improvements and thanks to the work of &lt;a href="https://github.com/gavinjoyce/"&gt;Gavin Joyce&lt;/a&gt;,
this release provides a &lt;a href="https://github.com/emberjs/ember.js/pull/14723"&gt;much improved&lt;/a&gt;
&amp;quot;backtracking re-render&amp;quot; assertion message. The new message provides actionable
information that can help track down the source of a backtracking re-render.
If you had previously encountered this assertion while
upgrading to 2.10, we recommend giving 2.11 a try.&lt;/p&gt;

&lt;p&gt;Additionally, the &lt;a href="https://github.com/emberjs/ember.js/pull/14649"&gt;last-minute issue regarding frozen helper arguments&lt;/a&gt;
mentioned in the &lt;a href="/blog/2016/11/30/ember-2-10-released.html"&gt;2.10 blog post&lt;/a&gt; has been
fixed in this release.&lt;/p&gt;

&lt;p&gt;Starting with 2.11, Ember.js releases will be available on npm via the
&lt;a href="https://www.npmjs.com/package/ember-source"&gt;&lt;code&gt;ember-source&lt;/code&gt;&lt;/a&gt; package. Please
refer the Ember CLI section below for more details.&lt;/p&gt;

&lt;p&gt;Finally, following the mitigation section in the recent &lt;a href="/blog/2016/12/14/security-incident-aws-s3-key-exposure.html"&gt;security incident
report&lt;/a&gt;, this is
also the first Ember.js release to be published by our automated build system.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-notable-changes'&gt;Other Notable Changes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Concatenated properties (such as &lt;code&gt;classNames&lt;/code&gt; and &lt;code&gt;classNameBindings&lt;/code&gt;) are
now &lt;a href="https://github.com/emberjs/ember.js/pull/14389"&gt;frozen&lt;/a&gt; in debug builds
to prevent unintended and unsupported mutations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The legacy &lt;code&gt;render&lt;/code&gt; helper (i.e. &lt;code&gt;{{render &amp;#39;foo&amp;#39;}}&lt;/code&gt;) has been deprecated
(&lt;a href="https://github.com/emberjs/ember.js/pull/14441"&gt;issue&lt;/a&gt;, &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_code-rendertoelement-code"&gt;deprecation
guide&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The private &lt;code&gt;Component#renderToElement&lt;/code&gt; API has also been deprecated
(&lt;a href="https://github.com/emberjs/ember.js/pull/14482"&gt;issue&lt;/a&gt;, &lt;a href="http://emberjs.com/deprecations/v2.x/#toc_code-render-code-helper"&gt;deprecation
guide&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember.js 2.11, please review the
&lt;a href="https://github.com/emberjs/ember.js/releases/tag/v2.11.0"&gt;Ember.js 2.11.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-js-2-12'&gt;Upcoming Changes in Ember.js 2.12&lt;/h3&gt;
&lt;p&gt;Ember.js 2.12 will serve as the basis of the next &lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;LTS release&lt;/a&gt;
and includes additional stability, compatibility and performance improvements.&lt;/p&gt;

&lt;p&gt;In addition to those improvements, it also implemented several changes arising
from the &lt;a href="https://github.com/emberjs/rfcs"&gt;RFC&lt;/a&gt; process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0150-factory-for.md"&gt;RFC #150&lt;/a&gt;
adds &lt;code&gt;factoryFor&lt;/code&gt; as a public API to replace the widely used &lt;code&gt;_lookupFactory&lt;/code&gt;
private API, which is now deprecated. In addition to providing a public API
for a sorely needed feature, it also unlocks the opportunity to eliminate one
of the major performance hotspot in the Ember.js object-model. This will
happen in a future release once the community has had the chance to migrate to
the new API. See pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14360"&gt;#14360&lt;/a&gt;
for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0178-deprecate-ember-k.md"&gt;RFC #178&lt;/a&gt;
deprecates the &lt;code&gt;Ember.K&lt;/code&gt; utility function. See pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14751"&gt;#14751&lt;/a&gt;
for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/emberjs/rfcs/blob/master/text/0191-deprecate-component-lifecycle-hook-args.md"&gt;RFC #191&lt;/a&gt;
deprecates the private arguments passed to the component lifecycle hooks
(&lt;code&gt;didInitAttrs&lt;/code&gt;, &lt;code&gt;didReceiveAttrs&lt;/code&gt; and &lt;code&gt;didUpdateAttrs&lt;/code&gt;). Please note that
this only deprecates the usage of the arguments passed to this hook, not the
hooks themselves. See pull request &lt;a href="https://github.com/emberjs/ember.js/pull/14711"&gt;#14711&lt;/a&gt;
for additional details.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the upcoming changes in Ember.js 2.12, please review the
&lt;a href="https://github.com/emberjs/ember.js/releases/tag/v2.12.0-beta.1"&gt;Ember.js 2.12.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-data'&gt;Ember Data&lt;/h2&gt;
&lt;p&gt;Ember Data is the official data persistence library for Ember.js applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-data-2-11'&gt;Changes in Ember Data 2.11&lt;/h3&gt;
&lt;p&gt;Ember Data 2.11 represents the work of 15 direct contributors
and over 70 commits.&lt;/p&gt;

&lt;p&gt;Ember Data 2.11 continues to expand on the performance improvements
started in Ember Data
2.10. &lt;a href="https://github.com/runspired"&gt;Chris Thoburn&lt;/a&gt; and
&lt;a href="https://github.com/stefanpenner"&gt;Stefan Penner&lt;/a&gt; contributed several
pull requests that allow Ember Data to defer work until it is needed by an
application or avoid the work all together if it is never
needed. Overall the process of pushing records into the store in Ember
Data 2.11 is about twice as fast as it was in 2.10.&lt;/p&gt;

&lt;p&gt;The Ember Data 2.11 release concludes an effort to audit the existing
API docs for Ember Data. The Ember Data community has checked all of
the API docs and ensured they are clear and contain code examples of
how to use the API. You can see the improved documentation
&lt;a href="http://emberjs.com/api/data/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_deprecations-in-ember-data-2-11'&gt;Deprecations in Ember Data 2.11&lt;/h4&gt;
&lt;p&gt;Ember Data now issues deprecation warnings for
&lt;code&gt;store#serialize()&lt;/code&gt;. Instead, it is recommended that you use
&lt;code&gt;record.serialize()&lt;/code&gt; in place of
&lt;code&gt;store.serialize(record)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;store#lookupAdapter()&lt;/code&gt; and &lt;code&gt;store#lookupSerializer()&lt;/code&gt; have also been
deprecated starting in Ember 2.11. These methods were never publicly
documented. In their place we recommend you use &lt;code&gt;store#adapterFor()&lt;/code&gt;
and &lt;code&gt;store#serializerFor()&lt;/code&gt; respectively.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;store#recordIsLoaded()&lt;/code&gt; is deprecated in favor of
&lt;code&gt;store#hasRecordForId()&lt;/code&gt;, as the logic in these two methods has been
identical since
&lt;a href="https://github.com/emberjs/data/pull/2875"&gt;March 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of the deprecated methods mentioned above will be supported until
Ember Data 3.0. Until then they will log a deprecation warning to
encourage use of the recommended replacement APIs.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_issues-with-ember-data-model-fragments'&gt;Issues with Ember Data Model Fragments&lt;/h4&gt;
&lt;p&gt;Due to internal refactoring, Ember Data 2.11 has
compatibility issues with older versions of the popular
&lt;a href="https://www.npmjs.com/package/ember-data-model-fragments"&gt;Ember Data Model Fragments&lt;/a&gt;
addon. If you are using this addon it
is recommended that you upgrade to
&lt;a href="https://github.com/lytics/ember-data-model-fragments/pull/227"&gt;Ember Data Model Fragments 2.11&lt;/a&gt;
at the same time as you upgrade Ember Data.&lt;/p&gt;

&lt;p&gt;For more details on the changes in Ember Data 2.11, please review the
&lt;a href="https://github.com/emberjs/data/releases/tag/v2.11.0"&gt;Ember Data 2.11.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-data-2-12'&gt;Upcoming changes in Ember Data 2.12&lt;/h3&gt;
&lt;p&gt;Ember Data 2.12 contains further performance improvements, and is
looking to be the fastest ever release of Ember Data.&lt;/p&gt;

&lt;p&gt;A new &lt;code&gt;serializeId()&lt;/code&gt; method has been added to &lt;code&gt;JSONSerializer&lt;/code&gt;,
&lt;code&gt;RESTSerializer&lt;/code&gt; and &lt;code&gt;JSONAPISerializer&lt;/code&gt;. This is useful if you are
working with a backend that requires your ids to be something other
than a string.&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;td colspan="2"&gt;app/serializers/application.js&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; DS from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-data&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;

&lt;span class="reserved"&gt;export&lt;/span&gt; &lt;span class="keyword"&gt;default&lt;/span&gt; DS.JSONSerializer.extend({
  serializeId(snapshot, json, primaryKey) {
    &lt;span class="keyword"&gt;var&lt;/span&gt; id = snapshot.id;
    json[primaryKey] = parseInt(id, &lt;span class="integer"&gt;10&lt;/span&gt;);
   }
});
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;h4 class='anchorable-toc' id='toc_deprecations-in-ember-data-2-12'&gt;Deprecations in Ember Data 2.12&lt;/h4&gt;
&lt;p&gt;There are no planned deprecations for Ember Data 2.12.&lt;/p&gt;

&lt;p&gt;For more details on the upcoming changes in Ember Data 2.11, please review the
&lt;a href="https://github.com/emberjs/data/releases/tag/v2.12.0-beta.1"&gt;Ember Data 2.12.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-cli'&gt;Ember CLI&lt;/h2&gt;
&lt;p&gt;Ember CLI is the command line interface for managing and packaging Ember.js
applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upgrading-ember-cli'&gt;Upgrading Ember CLI&lt;/h3&gt;
&lt;p&gt;You may upgrade Ember CLI separately from Ember.js and Ember Data! To upgrade
your projects using &lt;code&gt;yarn&lt;/code&gt; run:&lt;/p&gt;
&lt;div class="highlight text "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;yarn upgrade ember-cli
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To upgrade your projects using &lt;code&gt;npm&lt;/code&gt; run:&lt;/p&gt;
&lt;div class="highlight text "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;npm install --save-dev ember-cli
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After running the
upgrade command run &lt;code&gt;ember init&lt;/code&gt; inside of the project directory to apply the
blueprint changes. You can preview those changes for &lt;a href="https://github.com/ember-cli/ember-new-output/compare/v2.10.0...v2.11.0"&gt;applications&lt;/a&gt;
and &lt;a href="https://github.com/ember-cli/ember-addon-output/compare/v2.10.0...v2.11.0"&gt;addons&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-cli-2-11'&gt;Changes in Ember CLI 2.11&lt;/h3&gt;
&lt;p&gt;Ember CLI 2.11 no longer supports Node.js 0.12 per the
&lt;a href="http://emberjs.com/blog/2016/09/07/ember-node-lts-support.html"&gt;Ember Node.js LTS Support policy&lt;/a&gt;.
This also applies to a litany of sub-projects in the Ember community. Please
upgrade your Node.js version. We recommend adopting the most-recently-released
Node.js LTS.&lt;/p&gt;

&lt;p&gt;Following the mitigation section in the recent &lt;a href="/blog/2016/12/14/security-incident-aws-s3-key-exposure.html"&gt;security incident
report&lt;/a&gt; we have
begun the process of migrating repositories in the &lt;a href="https://github.com/ember-cli"&gt;ember-cli GitHub organization&lt;/a&gt;
to be published automatically via their automated build systems. Ember CLI
itself has not yet been migrated and as such continues to follow our
&lt;a href="https://github.com/ember-cli/ember-cli/blob/master/RELEASE.md"&gt;manual release process&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_ember-no-longer-supplied-via-code-bower-code'&gt;Ember No Longer Supplied Via &lt;code&gt;bower&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;We&amp;#39;ve been preparing for this moment for over a year now, but using &lt;code&gt;bower&lt;/code&gt; is
now completely optional inside of Ember CLI! Beginning with 2.11 we now provide
Ember via the &lt;a href="https://www.npmjs.com/package/ember-source"&gt;&lt;code&gt;ember-source&lt;/code&gt; npm package&lt;/a&gt;.
This means that when you run &lt;code&gt;ember new&lt;/code&gt; after installing 2.11 you can expect
to have an empty (but present) &lt;code&gt;bower.json&lt;/code&gt; file. Further work in 2.12 has been
done to remove &lt;code&gt;bower&lt;/code&gt; itself as a dependency. Addon developers please ensure
that you&amp;#39;re able to successfully test your addons with &lt;code&gt;ember-try&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_updated-code-ember-welcome-page-code'&gt;Updated &lt;code&gt;ember-welcome-page&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The Learning Team has spent an incredible amount of time and energy improving
the new user experience. As part of that we&amp;#39;ve updated the &lt;code&gt;ember-welcome-page&lt;/code&gt;
addon to the newest version which they have released. We&amp;#39;re calling this out
because it adds &lt;code&gt;application.hbs&lt;/code&gt; back into the default blueprint and includes
assets in a non-production build. Make sure that you always ship a &lt;em&gt;production&lt;/em&gt;
build when you publish your application; otherwise you will also include the
assets from &lt;code&gt;ember-welcome-page&lt;/code&gt; into your application.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-notable-changes'&gt;Other Notable Changes&lt;/h4&gt;
&lt;p&gt;We have a litany of other smaller improvements in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We &lt;a href="https://github.com/ember-cli/ember-cli/pull/6436"&gt;watch the &lt;code&gt;vendor&lt;/code&gt; folder by default&lt;/a&gt;,
making rebuilds work for changes in that directory. This may have performance
consequences, please monitor the resource consumption in your applications to
ensure that we have not regressed.&lt;/li&gt;
&lt;li&gt;Stefan Penner and David Hamilton made it so we do a better job at
&lt;a href="https://github.com/ember-cli/ember-cli/pull/6423"&gt;cleanup upon exit of Ember CLI&lt;/a&gt;.
This work prevents the pollution of the &lt;code&gt;tmp&lt;/code&gt; folder inside of your applications.&lt;/li&gt;
&lt;li&gt;Robert Jackson dramatically &lt;a href="https://github.com/ember-cli/ember-cli/pull/6453"&gt;reduced the number of merge steps&lt;/a&gt;
inside of the build, speeding up the build process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember CLI 2.11 and detailed upgrade
instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v2.11.0"&gt;Ember CLI 2.11.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-cli-2-12'&gt;Upcoming Changes in Ember CLI 2.12&lt;/h3&gt;
&lt;p&gt;We adopted the standard six week release cycle for Ember CLI shortly following
EmberConf 2016. This constant cadence allows us to get the improvements we&amp;#39;ve
collectively been working on into our applications. Ember CLI 2.12 will be the
most work we&amp;#39;ve ever had in a single release cycle and we&amp;#39;re ecstatic to get all
300+ commits (not including merges or upstream changes!) into your hands.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_babel'&gt;Babel&lt;/h4&gt;
&lt;p&gt;We&amp;#39;ve made changes in the way you configure Babel in your applications and also
now require that addons which need Babel transpilation supply their own
&lt;code&gt;ember-cli-babel&lt;/code&gt; dependency. The root application is &lt;em&gt;no longer&lt;/em&gt; wholly
responsible for the transpilation of all dependent addons. There is a
deprecation message which should guide you through the steps to make the
necessary changes in your application. This also means that addons themselves
are responsible for transpiling their code into AMD modules.&lt;/p&gt;

&lt;p&gt;We no longer overload the &lt;code&gt;babel&lt;/code&gt; key inside of &lt;code&gt;ember-cli-build.js&lt;/code&gt; to
conditionally use certain arguments for &lt;code&gt;babel&lt;/code&gt; and others for
&lt;code&gt;ember-cli-babel&lt;/code&gt;. This is categorically better, and we&amp;#39;ve provided deprecation
messages to help guide you to the new correct usage pattern.&lt;/p&gt;

&lt;p&gt;Rather than trying to walk through how to make these changes, please test this
out during the beta period and let us know if the messages are able to guide you
to the newly correct setup.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_eslint-all-the-things'&gt;ESLint All The Things!&lt;/h4&gt;
&lt;p&gt;Tobias Bieniek has been on a mission; we&amp;#39;ve now completed the move to ESLint
as the newly recommended linting tool for Ember applications. After upgrading to
Ember CLI 2.12 and running &lt;code&gt;ember init&lt;/code&gt; you will be presented with options to
remove the existing &lt;code&gt;ember-cli-jshint&lt;/code&gt; and rules and adopt &lt;code&gt;ember-cli-eslint&lt;/code&gt;.
The process should be relatively straightforward, though you&amp;#39;ll have to migrate
your styling rules from JSHint to ESLint. Please test it out and let us know how
it works in your applications during the beta period.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_nested-addon-code-preprocesstree-code-and-code-postprocesstree-code-invocation'&gt;Nested Addon &lt;code&gt;preprocessTree&lt;/code&gt; and &lt;code&gt;postprocessTree&lt;/code&gt; Invocation&lt;/h4&gt;
&lt;p&gt;In an oversight, we did not invoke &lt;code&gt;preprocessTree&lt;/code&gt; and &lt;code&gt;postprocessTree&lt;/code&gt;
against addon trees which were nested inside of other addons preventing them
from interacting with their parent addons in the ideal manner. This has been
fixed but it is possible that this bug-fix will change the build outcome of your
applications. We manually reviewed all public addons and didn&amp;#39;t identify any
likely issues, please report back with any problems you discover in your private
addons.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_performance'&gt;Performance&lt;/h4&gt;
&lt;p&gt;One of the major themes for this release cycle has been a focus on the build
performance of Ember CLI. We&amp;#39;ve added instrumentation to understand where we&amp;#39;re
spending time and have begun the consistent incremental work required to bring
build times down without changing the build output. This has been a team effort
with contributions from David Hamilton, Robert Jackson, Stefan Penner, Trent
Willis, and more.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_global-code-npm-code-usage'&gt;Global &lt;code&gt;npm&lt;/code&gt; Usage&lt;/h4&gt;
&lt;p&gt;Rather than bundling our own copy of &lt;code&gt;npm&lt;/code&gt; into Ember CLI we now delegate to the
system-installed version of &lt;code&gt;npm&lt;/code&gt;. This should dramatically reduce the install
time for your &lt;code&gt;node_modules&lt;/code&gt; directory. Note that we have set the minimum
supported version to be &lt;code&gt;npm@3&lt;/code&gt;. If you need to update the version on your
system you can do so by running &lt;code&gt;npm install -g npm&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_developers-developers-developers-developers'&gt;Developers, Developers, Developers, Developers&lt;/h4&gt;
&lt;p&gt;We&amp;#39;ve made a tremendous number of behind-the-scene changes to Ember CLI in
2.12. Our goal is to make contributing to Ember CLI simpler and quicker. Some
of the improvements include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We&amp;#39;ve adopted ESLint for Ember CLI itself, painted a few bikesheds, and
now have a much more consistent codebase. PR comments around code style should
come with an associated style rule change to enforce that behavior so that it
is consistent given the multitude of reviewers we have.&lt;/li&gt;
&lt;li&gt;Now that we have dropped support for Node.js 0.12 we have begun adoption of
all of the nice things we weren&amp;#39;t previously able to use; most-specifically
&lt;strong&gt;ES6 classes&lt;/strong&gt;! We&amp;#39;ve modified &lt;code&gt;core-object&lt;/code&gt; as well in order to make it
compatible with ES6 classes.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve adopted Yarn for development of Ember CLI. We now use it for CI and are
using this to lay a foundation for making &lt;code&gt;yarn&lt;/code&gt; a default and &lt;em&gt;supported&lt;/em&gt;
option for package management in applications.&lt;/li&gt;
&lt;li&gt;By virtue of a lot of work in CI and on caching test run times have been
reduced to seven minutes. Check out &lt;a href="https://github.com/ember-cli/ember-cli/blob/master/tests/helpers/package-cache.js"&gt;PackageCache&lt;/a&gt;
which got us most of the reward. More work is being done to allow offline tests.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve introduced an experiments API which allows us to incrementally land
invasive changes behind an experiment flag. The experiment flag prevents their
use except on the &lt;code&gt;canary&lt;/code&gt; branch. This allows us to experiment with API shape
and understand problems without committing to publishing a feature. Currently
the instrumentation changes are behind an experiment flag which allows us to
understand the needs and write a &lt;a href="https://github.com/ember-cli/rfcs/pull/90"&gt;much more complete RFC&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will continue this effort in upcoming releases.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-notable-changes'&gt;Other Notable Changes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ember new&lt;/code&gt; and &lt;code&gt;ember addon&lt;/code&gt; correctly support the &lt;code&gt;--directory&lt;/code&gt; argument and
allow you to specify an existing empty directory.&lt;/li&gt;
&lt;li&gt;Removed &lt;code&gt;ember-data&lt;/code&gt; and &lt;code&gt;ember-cli-app-version&lt;/code&gt; from the default
&lt;code&gt;ember addon&lt;/code&gt; blueprint.&lt;/li&gt;
&lt;li&gt;Duplicate calls to &lt;code&gt;.import(&amp;#39;assetname.js)&amp;#39;&lt;/code&gt; will no longer include the asset
in the output file twice.&lt;/li&gt;
&lt;li&gt;Given that we no longer require &lt;code&gt;bower&lt;/code&gt; in the default scenario, we now lazily
install it into your application the first time that you need it.&lt;/li&gt;
&lt;li&gt;Krati Ahuja split and removed the internal &lt;code&gt;serve-files&lt;/code&gt; addon which was
responsible for serving of assets in &lt;code&gt;ember serve&lt;/code&gt;. This enables progress on
FastBoot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember CLI 2.12.0-beta.1 and detailed upgrade
instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v2.12.0-beta.1"&gt;Ember CLI 2.12.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_thank-you'&gt;Thank You!&lt;/h2&gt;
&lt;p&gt;As a community-driven open-source project with an ambitious scope, each of
these releases serve as a reminder that the Ember project would not have been
possible without your continued support. We are extremely grateful to our
contributors for their efforts.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Security Incident - AWS S3 Access Key Exposure</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/12/14/security-incident-aws-s3-key-exposure.html"/>
    <id>http://emberjs.com/blog/2016/12/14/security-incident-aws-s3-key-exposure.html</id>
    <published>2016-12-14T00:00:00+00:00</published>
    <updated>2016-12-14T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;On November 29th, 2016, the Ember security team was notified that version &lt;code&gt;2.11.0-beta.1&lt;/code&gt; of the &lt;code&gt;ember-source&lt;/code&gt; npm package inadvertently included a file that contained an AWS access key. This access key had permissions for full read/write access to the...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;On November 29th, 2016, the Ember security team was notified that version &lt;code&gt;2.11.0-beta.1&lt;/code&gt; of the &lt;code&gt;ember-source&lt;/code&gt; npm package inadvertently included a file that contained an AWS access key. This access key had permissions for full read/write access to the Ember S3 buckets.
These buckets are used to distribute pre-built versions of Ember.js and related libraries and host other static content:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ember.js via &lt;code&gt;builds.emberjs.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ember Data via &lt;code&gt;builds.emberjs.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Backburner.js via &lt;code&gt;builds.emberjs.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Handlebars.js via &lt;code&gt;builds.handlebarsjs.com.s3.amazonaws.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;RSVP.js via &lt;code&gt;rsvpjs-builds.s3.amazonaws.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Router.js via &lt;code&gt;routerjs.builds.emberjs.com.s3-website-us-east-1.amazonaws.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ember guides and API documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the vast majority of Ember users retrieve new releases from Bower or npm, the builds on S3 are frequently used with online tools like JSBin and Ember Twiddle or anywhere it is more convenient to add a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;After performing a full audit, we concluded that the key was &lt;em&gt;not&lt;/em&gt; accessed during the timeframe of the incident, and there was no evidence of unauthorized activities. Therefore, &lt;strong&gt;no action is required on your part&lt;/strong&gt;. This notice is advisory and contains an incident description as well as our mitigation plans.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_incident-report'&gt;Incident Report&lt;/h3&gt;
&lt;p&gt;At 4:13pm PST on November 29th, version &lt;code&gt;2.11.0-beta.1&lt;/code&gt; of &lt;code&gt;ember-source&lt;/code&gt; was published from the computer of a member of the Ember release team and inadvertently included the AWS access key.&lt;/p&gt;

&lt;p&gt;At 9:25pm, a member of the Ember security team was privately notified of the key exposure. We immediately acknowledged the notification and began investigating the issue.&lt;/p&gt;

&lt;p&gt;At 9:33pm, we confirmed the key exposure by installing the package from npm and examining its contents. We verified that there were no other Ember-related secrets included in the package other than the AWS access key.&lt;/p&gt;

&lt;p&gt;At 10:26pm, we revoked access to the exposed access key. There was a delay between the incident verification and the key revocation because the individuals with administrator access to AWS were not at a computer when the report was received.&lt;/p&gt;

&lt;p&gt;Once the access key was revoked, we began to assess if the compromised key had been used by an unauthorized user. Concurrently, we began auditing when the access key was introduced to the &lt;code&gt;ember-source&lt;/code&gt; package.&lt;/p&gt;

&lt;p&gt;The IAM Access Advisor in AWS indicated that the exposed access key only had permission to access S3 buckets, and that it had not been used in the past 376 days. We also verified that no previous releases contained the access key. This access key had not been used in over a year because we began publishing to S3 from our Continuous Integration server.&lt;/p&gt;

&lt;p&gt;Because AWS indicates that the access key has not recently been used, and because it only had access to S3, we concluded that an unauthorized user had not been able to use the key before access was revoked. There was no indication that any files in our S3 buckets had been tampered with.&lt;/p&gt;

&lt;p&gt;At this time, we decided against requesting that the affected package be yanked from npm. We know that yanked packages can cause sudden build failures and believed that any security risk had been mitigated by revoking the compromised access key.&lt;/p&gt;

&lt;p&gt;We also audited the S3 access logs, which had been previously enabled. These logs did not indicate any unauthorized access. However, the logs themselves were stored in an S3 bucket that the compromised key had access to, so we did not consider them to be as reliable as the key&amp;#39;s last accessed date, which an unauthorized user would be unable to alter.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_mitigations'&gt;Mitigations&lt;/h3&gt;
&lt;p&gt;We have implemented or are planning to implement several mitigations to prevent exposures of this kind in the future.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We have begun removing permissions to access S3 from all IAM accounts associated with individual team members.&lt;/li&gt;
&lt;li&gt;We no longer grant access to all S3 buckets to any one account.&lt;/li&gt;
&lt;li&gt;We are migrating to a CI-deployed system so we will no longer need publish to npm or Bower from an individual&amp;#39;s computer. We will have our Continuous Integration system (and only our CI system) publish new releases, as we do with the builds that are uploaded to S3.&lt;/li&gt;
&lt;li&gt;We will modify the S3 permissions to be &amp;quot;append only,&amp;quot; so our CI system can only upload new objects to S3, not delete or modify existing objects. This would prevent tampering with older releases and limit the extent of an attack if the keys are exposed in the future.&lt;/li&gt;
&lt;li&gt;We are examining options for increasing the logging and auditability of our AWS infrastructure, such as enabling CloudTrail.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 class='anchorable-toc' id='toc_conclusion'&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We take the security of Ember and the applications you build with it very seriously. I sincerely apologize that we let this happen. We will work to improve our release process to prevent similar security lapses from happening in the future.&lt;/p&gt;

&lt;p&gt;We are deeply appreciative that this mistake was responsibly disclosed so that we were able to revoke the access key before a malicious attacker took advantage of it.&lt;/p&gt;

&lt;p&gt;I would like to extend a personal note of thanks to Marcelo Mira (@marcemira), who noticed the exposure and promptly reported the issue privately. This quick action prevented a bad situation from becoming much worse.&lt;/p&gt;

&lt;p&gt;I&amp;#39;d also like to thank Godfrey Chan, who displayed exemplary professionalism, composure and diligence in quickly responding to the report late at night. He is a true asset to the team.&lt;/p&gt;

&lt;p&gt;If you discover a security-related issue in Ember, we ask that you follow our &lt;a href="/security/"&gt;disclosure policy&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_additional-reading'&gt;Additional Reading&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/blog/2013/04/05/announcing-the-ember-security-policy.html"&gt;Ember.js Security Policy Announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/security/"&gt;Ember.js Security Policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/ember-security"&gt;Ember.js Security Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ember 2.10 and 2.11 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/11/30/ember-2-10-released.html"/>
    <id>http://emberjs.com/blog/2016/11/30/ember-2-10-released.html</id>
    <published>2016-11-30T00:00:00+00:00</published>
    <updated>2016-11-30T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Today, the Ember project is releasing Ember.js, Ember Data and Ember CLI
version 2.10.0.&lt;/p&gt;

&lt;p&gt;This also kicks off the 2.11 beta cycle for all sub-projects. We encourage our
community (especially addon authors) to help test these beta builds and report...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today, the Ember project is releasing Ember.js, Ember Data and Ember CLI
version 2.10.0.&lt;/p&gt;

&lt;p&gt;This also kicks off the 2.11 beta cycle for all sub-projects. We encourage our
community (especially addon authors) to help test these beta builds and report
any bugs before they are published as a final release in six weeks&amp;#39; time. The
&lt;a href="https://github.com/ember-cli/ember-try"&gt;ember-try&lt;/a&gt; addon is a great way to
continuously test your projects against the latest Ember releases.&lt;/p&gt;

&lt;p&gt;Starting with this release, we will be publishing a single, unified release
blog post summarizing all the changes for all three sub-projects in one place.
You can read more about our general release process here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/builds/"&gt;Release Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2013/09/06/new-ember-release-process.html"&gt;The Ember Release Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2015/06/16/ember-project-at-2-0.html"&gt;The Ember Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;Ember LTS Releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js'&gt;Ember.js&lt;/h2&gt;
&lt;p&gt;Ember.js is the core framework for building ambitious web applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-js-2-10'&gt;Changes in Ember.js 2.10&lt;/h3&gt;
&lt;p&gt;Ember.js 2.10 is the first release to include &lt;a href="http://emberjs.com/blog/2016/07/29/announcing-the-glimmer-2-alpha.html"&gt;Glimmer 2&lt;/a&gt;,
a ground-up rewrite of Ember&amp;#39;s rendering engine.&lt;/p&gt;

&lt;p&gt;Despite all the changes that took place under-the-hood, we are committed to
making this a &lt;strong&gt;drop-in, completely backwards compatible upgrade for virtually
all Ember.js users&lt;/strong&gt;. Over the past few months, we have been &lt;a href="http://emberjs.com/blog/2016/10/17/ember-2-9-released.html#toc_ember-js-2-10-beta"&gt;hard at work&lt;/a&gt;
to make this a reality.&lt;/p&gt;

&lt;p&gt;Thanks to everyone in the community who took the time to test their apps and
addons against the Glimmer 2 alpha and beta builds, this has been one of the
most rigorously tested releases in the history of the Ember project. We are
quite confident that upgrade will go smoothly for most apps. However, if you
encounter any issues, please do report them to the &lt;a href="https://github.com/emberjs/ember.js/issues/"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While this release is focused on compatibility and does not expose any new
capabilities, the new rendering engine has unlocked a lot of &lt;a href="http://emberjs.com/blog/2016/07/29/announcing-the-glimmer-2-alpha.html#toc_a-whole-lot-more-to-come"&gt;new frontiers&lt;/a&gt;
for us, creating a much better foundation for adding new features as well as
room for future performance impovements. With the initial integration now out
of the way, we are quite excited to return our efforts to those areas in
upcoming releases.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_other-notable-changes'&gt;Other notable changes&lt;/h4&gt;
&lt;p&gt;In addition to the Glimmer 2 integration, a few other notable changes are also
included in this release.&lt;/p&gt;

&lt;p&gt;First, &lt;a href="https://github.com/trentmwillis"&gt;Trent Willis&lt;/a&gt;, &lt;a href="https://github.com/nathanhammond"&gt;Nathan Hammond&lt;/a&gt;
and &lt;a href="https://github.com/alexspeller"&gt;Alex Speller&lt;/a&gt; have contributed a series of
patches to address some long-standing issues and edge cases in the routing
layer, particularly in the area of query params.&lt;/p&gt;

&lt;p&gt;Second, thanks to &lt;a href="https://github.com/rwjblue"&gt;Robert Jackson&lt;/a&gt;, we now use
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"&gt;WeakMap&lt;/a&gt;
to &lt;a href="https://github.com/emberjs/ember.js/pull/13783"&gt;store object metadata&lt;/a&gt; on
browsers that supports them. A pleasant side-effect of this internal change is
that Ember no longer adds an &lt;code&gt;__ember_meta__&lt;/code&gt; property to every object.&lt;/p&gt;

&lt;p&gt;Finally, it has come to our attention that it is quite common for developers to
accidentally mutate the arguments passed into a helper. This is problematic as
these objects are often shared or reused, causing subtle issues that are very
difficult to debug.&lt;/p&gt;

&lt;p&gt;To help track down these kind of issues, these objects are now &lt;a href="https://github.com/emberjs/ember.js/pull/14244"&gt;frozen&lt;/a&gt;
in the debug build before they are passed into helpers. As a result, you will
get an error if you attempt to modify these objects directly. It is recommended
that you clone these objects (e.g. using &lt;code&gt;Object.assign&lt;/code&gt; and &lt;code&gt;Array#slice&lt;/code&gt;)
before making any modifications to them.&lt;/p&gt;

&lt;p&gt;(It has been brought to our attention that the last change might have an
&lt;a href="https://github.com/emberjs/ember.js/pull/14649"&gt;unintended consequence&lt;/a&gt;.
A fix is being worked on by &lt;a href="https://github.com/mixonic"&gt;Matthew Beale&lt;/a&gt;. Please
refer to the linked issue for a detailed description and suggested workaround.)&lt;/p&gt;

&lt;p&gt;For more details on the changes in Ember.js 2.10, please review the
&lt;a href="https://github.com/emberjs/ember.js/releases/tag/v2.10.0"&gt;Ember.js 2.10.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-js-2-11'&gt;Upcoming changes in Ember.js 2.11&lt;/h3&gt;
&lt;p&gt;Currently, no new features are planned for 2.11. However, there are a few
notable changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Similar to the change to helper arguments, concatenated properties (such as
&lt;code&gt;classNames&lt;/code&gt; and &lt;code&gt;classNameBindings&lt;/code&gt;) are now &lt;a href="https://github.com/emberjs/ember.js/pull/14389"&gt;frozen&lt;/a&gt;
in debug builds to help track down unintended mutations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The legacy &lt;code&gt;render&lt;/code&gt; helper (i.e. &lt;code&gt;{{render &amp;#39;foo&amp;#39;}}&lt;/code&gt;) has been &lt;a href="https://github.com/emberjs/ember.js/pull/14441"&gt;deprecated&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The private &lt;code&gt;Component#renderToElement&lt;/code&gt; API has also been &lt;a href="https://github.com/emberjs/ember.js/pull/14482"&gt;deprecated&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the upcoming changes in Ember.js 2.11, please review the
&lt;a href="https://github.com/emberjs/ember.js/releases/tag/v2.11.0-beta.1"&gt;Ember.js 2.11.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-data'&gt;Ember Data&lt;/h2&gt;
&lt;p&gt;Ember Data is the offical data persistence library for Ember.js applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-data-2-10'&gt;Changes in Ember Data 2.10&lt;/h3&gt;
&lt;p&gt;Ember Data 2.10 represents the work of more than 10 direct contributors with
over 20 commits.&lt;/p&gt;

&lt;p&gt;There have been no user facing changes in Ember Data 2.10. Under the
hood, &lt;a href="https://github.com/runspired"&gt;Chris Thoburn&lt;/a&gt; has instrumented
Ember Data with internal tools making it easier to track the
performance of Ember Data. This instrumentation is stripped from
production builds and should have no impact on existing
applications.&lt;/p&gt;

&lt;p&gt;Chris also
&lt;a href="https://github.com/emberjs/data/pull/4578"&gt;improved the messaging&lt;/a&gt;
around assertions and warnings when an adapter responds with no &lt;code&gt;id&lt;/code&gt;
for a record.&lt;/p&gt;

&lt;p&gt;For more details on the changes in Ember Data 2.10, please review the
&lt;a href="https://github.com/emberjs/data/releases/tag/v2.10.0"&gt;Ember Data 2.10.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-data-2-11'&gt;Upcoming changes in Ember Data 2.11&lt;/h3&gt;
&lt;p&gt;Ember Data 2.11 is already shaping up to be a big release with many
performance and documentation improvements.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_hasmany-computed-property-keys'&gt;HasMany Computed Property Keys&lt;/h4&gt;
&lt;p&gt;One of the performance improvements included in Ember Data
2.11 fixes an issue where changes to the records of a
&lt;code&gt;DS.hasMany()&lt;/code&gt; caused unnecessary work. As a result,
Ember Data would over-eagerly invalidate computed
properties that depended on these &lt;code&gt;hasMany&lt;/code&gt; relationships. Due to the
nature of the fix application code depending on a relationship array
without watching the contents of that array may need to be updated. For
example you may need to update computed property keys that depended on
&lt;code&gt;record.someHasManyRelationshipName&lt;/code&gt; to &lt;code&gt;record.someHasManyRelationshipName.[]&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_deprecations-in-ember-data-2-11'&gt;Deprecations in Ember Data 2.11&lt;/h4&gt;
&lt;p&gt;Ember Data now issues deprecation warnings for
&lt;code&gt;store#serialize()&lt;/code&gt;. Instead, it is recommended that you use
&lt;code&gt;record.serialize()&lt;/code&gt; in place of
&lt;code&gt;store.serialize(record)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;store#lookupAdapter()&lt;/code&gt; and &lt;code&gt;store#lookupSerializer()&lt;/code&gt; have also been
deprecated starting in Ember 2.11. These methods were never publicly
documented. In their place we recommend you use &lt;code&gt;store#adapterFor()&lt;/code&gt;
and &lt;code&gt;store#serializerFor()&lt;/code&gt; respectively.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;store#recordIsLoaded()&lt;/code&gt; is deprecated in favor of
&lt;code&gt;store#hasRecordForId()&lt;/code&gt;, as the logic in these two methods has been
identical since
&lt;a href="https://github.com/emberjs/data/pull/2875"&gt;March 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of the deprecated methods mentioned above will be supported until
Ember Data 3.0. Until then they will log a deprecation warning to
encourage use of the recommended replacement APIs.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_move-code-ds-improved-ajax-code-out-of-code-beta-code-channel'&gt;Move &lt;code&gt;ds-improved-ajax&lt;/code&gt; out of &lt;code&gt;beta&lt;/code&gt; channel&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ds-improved-ajax&lt;/code&gt; implemented in
&lt;a href="https://github.com/emberjs/data/pull/3099"&gt;PR #3099&lt;/a&gt; aims to provide
public hooks on the &lt;code&gt;rest&lt;/code&gt; adapter for customizing requests. For example
to specify the HTTP method or
provide custom HTTP headers per request. This feature has been available
in beta builds since the 2.8 beta cycle.&lt;/p&gt;

&lt;p&gt;Unfortunately, this feature slipped into the code base without going
though a proper RFC process. Despite being enabled in the beta channel
for a while now, we decided that it should be disabled again in favour
of a feature which has gone though the RFC process and benefited from
valuable community feedback.&lt;/p&gt;

&lt;p&gt;We are aware that it is quite rare for a feature to be backed out from
the beta channel but we consider the ability to do so a strength of
our release process. We would like to thank everyone who took the time
to test their applications against the beta channel and we would
highly appreciate your feedback on the proposed replacement to this
functionality in
&lt;a href="https://github.com/emberjs/rfcs/pull/171"&gt;RFC #171&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more details on the upcoming changes in Ember Data 2.11, please review the
&lt;a href="https://github.com/emberjs/data/releases/tag/v2.11.0-beta.1"&gt;Ember Data 2.11.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-cli'&gt;Ember CLI&lt;/h2&gt;
&lt;p&gt;Ember CLI is the command line interface for managing and packaging Ember.js
applications.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upgrading-ember-cli'&gt;Upgrading Ember CLI&lt;/h3&gt;
&lt;p&gt;You may upgrade Ember CLI separately from Ember.js and Ember Data! To upgrade
your projects using &lt;code&gt;yarn&lt;/code&gt; run &lt;code&gt;yarn upgrade ember-cli&lt;/code&gt;. To upgrade your
projects using &lt;code&gt;npm&lt;/code&gt; run &lt;code&gt;npm install --save-dev ember-cli&lt;/code&gt;. After running the
upgrade command run &lt;code&gt;ember init&lt;/code&gt; inside of the project directory to apply the
blueprint changes. You can view those changes for &lt;a href="https://github.com/ember-cli/ember-new-output/compare/v2.9.1...v2.10.0"&gt;applications here&lt;/a&gt;
and &lt;a href="https://github.com/ember-cli/ember-addon-output/compare/v2.9.1...v2.10.0"&gt;addons here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_changes-in-ember-cli-2-10'&gt;Changes in Ember CLI 2.10&lt;/h3&gt;
&lt;p&gt;Ember CLI 2.10 no longer supports Node.js 0.10 per the
&lt;a href="http://emberjs.com/blog/2016/09/07/ember-node-lts-support.html"&gt;Ember Node.js LTS Support policy&lt;/a&gt;.
Further, it is the last release which will officially support Node.js 0.12
which will be &lt;a href="https://github.com/nodejs/LTS#lts-schedule"&gt;removed from support at the end of this year&lt;/a&gt;.
Please make sure you begin your migration to a newer version of Node.js as soon
as possible.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_sorting-of-code-package-json-code'&gt;Sorting of &lt;code&gt;package.json&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;In order to guarantee consistency with &lt;code&gt;npm&lt;/code&gt; and other tools Ember CLI now
&lt;a href="https://github.com/ember-cli/ember-cli/pull/6272"&gt;sorts &lt;code&gt;package.json&lt;/code&gt; in accordance with the upstream patterns&lt;/a&gt;.
This may result in changes in execution order of the addons in your application
which should be non-breaking. If you experience issues you will
&lt;a href="https://ember-cli.com/extending/#configuring-your-ember-addon-properties"&gt;need to specify &lt;code&gt;before&lt;/code&gt; and/or &lt;code&gt;after&lt;/code&gt; in your addon&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_concatenation'&gt;Concatenation&lt;/h4&gt;
&lt;p&gt;Concatenation of assets has been implicit based upon file-system ordering. An
update to &lt;code&gt;broccoli-concat&lt;/code&gt; which changed the walk order of the file system to
guarantee consistency and stable concatenation broke the implicit reliance we
had on that ordering. To ensure that we remain backwards compatible
&lt;a href="https://github.com/ember-cli/ember-cli/pull/6081"&gt;we have changed our invocation pattern to reproduce the intended behavior&lt;/a&gt;.
Child modules without specific ordering will now be sorted lexicographically
inside of your assets.&lt;/p&gt;

&lt;p&gt;We also moved to a &lt;a href="https://github.com/ember-cli/ember-cli/issues/6300"&gt;system-independent line separator&lt;/a&gt;
to guarantee that builds are reproducible across different operating systems.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_code-npm-code-upgrade'&gt;&lt;code&gt;npm&lt;/code&gt; Upgrade&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/dfreeman"&gt;Dan Freeman&lt;/a&gt; has &lt;a href="https://github.com/ember-cli/ember-cli/pull/6306"&gt;updated our bundled &lt;code&gt;npm&lt;/code&gt; dependency&lt;/a&gt;
to &lt;code&gt;npm@3&lt;/code&gt;. This will change the resulting &lt;code&gt;node_modules&lt;/code&gt; folder layout inside
of your application when you run &lt;code&gt;ember install&lt;/code&gt;. This will likely only cause
problems if you tried to guess at the path to a module based upon install
behavior. If you need to identify the path to a module inside of the &lt;code&gt;node&lt;/code&gt;
JavaScript world be sure you&amp;#39;re using &lt;code&gt;require.resolve(&amp;#39;module-name&amp;#39;);&lt;/code&gt;.&lt;/p&gt;
&lt;h4 class='anchorable-toc' id='toc_testing-addons'&gt;Testing Addons&lt;/h4&gt;
&lt;p&gt;Ember CLI 2.10 removes Ember.js 1.13 from the default testing matrix in the
addon blueprint. Given that we now have two LTS releases in the Ember.js 2.x
series, we no longer feel that supporting Ember.js 1.13 is a reasonable
default for newly-created addons. You may continue to support Ember.js 1.13 in
your addons (and in most cases it&amp;#39;s simple to do) by adding it back into the
testing matrix.&lt;/p&gt;

&lt;p&gt;For more details on the changes in Ember CLI 2.10 and detailed upgrade
instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v2.10.0"&gt;Ember CLI 2.10.0 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 class='anchorable-toc' id='toc_upcoming-changes-in-ember-cli-2-11'&gt;Upcoming changes in Ember CLI 2.11&lt;/h3&gt;
&lt;p&gt;In our continous incremental progress toward making &lt;code&gt;bower&lt;/code&gt; optional inside of
Ember CLI we have moved to include Ember.js itself via
&lt;a href="https://www.npmjs.com/package/ember-source"&gt;&lt;code&gt;ember-source&lt;/code&gt;&lt;/a&gt;–provided via &lt;code&gt;npm&lt;/code&gt;.
In 2.11 we will no longer have any packages provided by &lt;code&gt;bower&lt;/code&gt; in a brand
new Ember.js application!&lt;/p&gt;

&lt;p&gt;Ember CLI 2.11 will not officially support Node.js 0.12 per the
&lt;a href="http://emberjs.com/blog/2016/09/07/ember-node-lts-support.html"&gt;Ember Node.js LTS Support policy&lt;/a&gt;.
Please make sure you begin your migration to a newer version of Node.js as soon
as possible.&lt;/p&gt;

&lt;p&gt;We have a litany of other smaller improvements in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We bundle a new and improved version of &lt;code&gt;ember-welcome-page&lt;/code&gt;, the learning
team&amp;#39;s addon for providing a quick start introduction for users.&lt;/li&gt;
&lt;li&gt;We &lt;a href="https://github.com/ember-cli/ember-cli/pull/6436"&gt;watch the &lt;code&gt;vendor&lt;/code&gt; folder by default&lt;/a&gt;,
making rebuilds work for changes in that directory.&lt;/li&gt;
&lt;li&gt;Stefan Penner made it so we do a better job at &lt;a href="https://github.com/ember-cli/ember-cli/pull/6423"&gt;cleanup upon exit of Ember CLI&lt;/a&gt;
preventing pollution of the &lt;code&gt;tmp&lt;/code&gt; folder inside of your applications.&lt;/li&gt;
&lt;li&gt;Robert Jackson dramatically &lt;a href="https://github.com/ember-cli/ember-cli/pull/6453"&gt;reduced the number of merge steps&lt;/a&gt; inside of the build,
speeding up the build process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more details on the changes in Ember CLI 2.11.0-beta.1 and detailed upgrade
instructions, please review the &lt;a href="https://github.com/ember-cli/ember-cli/releases/tag/v2.11.0-beta.1"&gt;Ember CLI 2.11.0-beta.1 release page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_thank-you'&gt;Thank You!&lt;/h2&gt;
&lt;p&gt;As a community-driven open-source project with an ambitious scope, each of
these releases serve as a reminder that the Ember project would not have been
possible without your continued support. We are extremely grateful to our
contributors for their efforts.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ember.js 2.8-LTS, 2.9 and 2.10 Beta Released</title>
    <link rel="alternate" href="http://emberjs.com/blog/2016/10/17/ember-2-9-released.html"/>
    <id>http://emberjs.com/blog/2016/10/17/ember-2-9-released.html</id>
    <published>2016-10-17T00:00:00+00:00</published>
    <updated>2016-10-17T00:00:00+00:00</updated>
    <author>
      <name>Ember</name>
    </author>
    <summary type="html">&lt;p&gt;Today, we are releasing Ember 2.8-LTS (a long-term support release), Ember 2.9.0 and Ember 2.10 beta.&lt;/p&gt;
&lt;h2 class="anchorable-toc" id="toc_ember-js-2-8-lts"&gt;Ember.js 2.8-LTS&lt;/h2&gt;
&lt;p&gt;Ember 2.8-LTS is our second long-term support release. You can install it by running &lt;code&gt;bower install --save ember#lts-2-8&lt;/code&gt; in your projects...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Today, we are releasing Ember 2.8-LTS (a long-term support release), Ember 2.9.0 and Ember 2.10 beta.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js-2-8-lts'&gt;Ember.js 2.8-LTS&lt;/h2&gt;
&lt;p&gt;Ember 2.8-LTS is our second long-term support release. You can install it by running &lt;code&gt;bower install --save ember#lts-2-8&lt;/code&gt; in your projects.&lt;/p&gt;

&lt;p&gt;The LTS channel is designed for Ember users who would like to upgrade less frequently, while still getting support from the project and the wider ecosystem. At the same time, it allows addon authors to know which versions of Ember to focus their effort on.&lt;/p&gt;

&lt;p&gt;Per our &lt;a href="http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html"&gt;usual policy&lt;/a&gt;, Ember 2.8-LTS is released six weeks after the &lt;a href="http://emberjs.com/blog/2016/09/08/ember-2-8-and-2-9-beta-released.html#toc_ember-js-2-8"&gt;2.8.0 stable release&lt;/a&gt;. This allows ample time to fix any reported regressions and ensures a rock solid LTS release. It will continue to receive critical bugfixes for six release cycles (roughly June 2017), and security patches for ten release cycles (roughly February 2018).&lt;/p&gt;

&lt;p&gt;Meanwhile, Ember 2.4-LTS will continue to receive critical bugfixes for another two release cycles (roughly January 2017), and security patches for six release cycles (roughly June 2017). Users of Ember 2.4-LTS should make use of this overlapping period to transition over to Ember 2.8-LTS.&lt;/p&gt;

&lt;p&gt;Most notably, as we have mentioned in the &lt;a href="http://emberjs.com/blog/2016/04/11/ember-2-5-released.html#toc_notable-deprecations-in-ember-2-4-lts"&gt;Ember 2.4-LTS announcement&lt;/a&gt;, applications who are using the legacy views and controllers addons will need to migrate away from these addons before they can upgrade.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;For more details on the changes landing in Ember.js 2.8-LTS, please review the &lt;a href="https://github.com/emberjs/ember.js/blob/v2.8.2/CHANGELOG.md"&gt;Ember.js 2.8.2 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js-2-9'&gt;Ember.js 2.9&lt;/h2&gt;
&lt;p&gt;In the &lt;a href="http://emberjs.com/blog/2016/09/08/ember-2-8-and-2-9-beta-released.html#toc_ember-js-2-9-beta"&gt;Ember 2.9 beta blog post&lt;/a&gt;, we announced our intention to include the new Glimmer 2 rendering engine in the 2.9 release. However, after careful consideration, we have decided to temporarily hold off on the integration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This means that 2.9 will ship with the same rendering engine as 2.8 and does not include any new features, notable changes or deprecations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we moved ahead with Glimmer in the 2.9 beta channel in September, all of Ember&amp;#39;s tests were passing, we had no known blockers and it was already working fine for a number of apps we tested (including some core team member&amp;#39;s production apps). Due to the magnitude of the internal changes, we fully expected to find bugs not already covered by our initial testing, so we called for the community to beta test the release.&lt;/p&gt;

&lt;p&gt;We got a lot of positive results during the beta period, and some of our community sites (such as &lt;a href="https://emberobserver.com/"&gt;Ember Observer&lt;/a&gt; and &lt;a href="https://www.emberaddons.com/"&gt;Ember Addons&lt;/a&gt;) have already migrated to using the beta in production. However, as more apps tested the beta, we began to see a few critical edge cases reported during the mid-to-late part of the beta cycle. We were able to fix a number of them, but at this point, there are still a &lt;a href="https://github.com/emberjs/ember.js/milestone/29"&gt;handful of open issues&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As we said in the &lt;a href="http://emberjs.com/blog/2016/09/08/ember-2-8-and-2-9-beta-released.html#toc_compatibility-first"&gt;Ember 2.9 beta announcement&lt;/a&gt;, the &amp;quot;primary goal of this release is maximal compatibility – &lt;strong&gt;we expect the final release to be a drop-in, completely backwards compatible upgrade for virtually all Ember users&lt;/strong&gt;&amp;quot;. Therefore, we decided to err on the side of caution and take another six weeks to ensure the smoothest possible experience for our users.&lt;/p&gt;

&lt;p&gt;While it is quite rare for a feature to be backed out from the beta channel, we consider the ability to do so a strength of our &lt;a href="http://emberjs.com/blog/2013/09/06/new-ember-release-process.html#toc_the-beta-branch"&gt;release process&lt;/a&gt;, and we would like to thank everyone who took the time to test their application against the beta channel.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;For more details on the changes landing in Ember.js 2.9, please review the &lt;a href="https://github.com/emberjs/ember.js/blob/v2.9.0/CHANGELOG.md"&gt;Ember.js 2.9.0 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
&lt;h2 class='anchorable-toc' id='toc_ember-js-2-10-beta'&gt;Ember.js 2.10 beta&lt;/h2&gt;
&lt;p&gt;As mentioned above, we will continue the Glimmer 2 integration work in Ember 2.10 beta, with a focus on resolving the &lt;a href="https://github.com/emberjs/ember.js/milestone/29"&gt;remaining compatibility issues&lt;/a&gt;. You can &lt;a href="http://emberjs.com/blog/2016/09/08/ember-2-8-and-2-9-beta-released.html#toc_ember-js-2-9-beta"&gt;read about the integration&lt;/a&gt; in the original announcement.&lt;/p&gt;

&lt;p&gt;If you haven&amp;#39;t already, we highly encourage you to test your application against 2.10 beta as soon as possible and report any issues you encounter. Given that it already went through a complete beta cycle and we were quite close to releasing it, we expect this to go smoothly for most apps.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;For more details on changes landing in 2.10 beta, review the &lt;a href="https://github.com/emberjs/ember.js/blob/v2.10.0-beta.1/CHANGELOG.md"&gt;Ember.js 2.10.0-beta.1 CHANGELOG&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
